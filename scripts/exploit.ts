// South exploit code for alpaca finance
import { ethers, upgrades, waffle } from "hardhat";
import { Overrides, Signer, BigNumberish, utils, Wallet } from "ethers";
import chai from "chai";
import { solidity } from "ethereum-waffle";
import "@openzeppelin/test-helpers";

import {
  WETH,
  WETH__factory,
  AlpacaToken,
  AlpacaToken__factory,
  CakeToken,
  CakeToken__factory,
  DebtToken,
  DebtToken__factory,
  FairLaunch,
  FairLaunch__factory,
  MockERC20,
  MockERC20__factory,
  MockWBNB,
  MockWBNB__factory,
  PancakeFactory,
  PancakeFactory__factory,
  PancakeMasterChef,
  PancakeMasterChef__factory,
  PancakePair,
  PancakePair__factory,
  PancakeRouter,
  PancakeRouter__factory,
  PancakeswapWorker,
  PancakeswapWorker__factory,
  SimpleVaultConfig,
  SimpleVaultConfig__factory,
  StrategyAddBaseTokenOnly,
  StrategyAddBaseTokenOnly__factory,
  StrategyLiquidate,
  StrategyLiquidate__factory,
  StrategyPartialCloseLiquidate,
  StrategyPartialCloseLiquidate__factory,
  SyrupBar,
  SyrupBar__factory,
  Vault,
  Vault__factory,
  WNativeRelayer,
  WNativeRelayer__factory,
} from '../typechain/'

import * as AssertHelpers from "../test/helpers/assert"
import * as TimeHelpers from "../test/helpers/time"


async function main() {
  let hhFunded: Signer
  let Panda: Signer
  let IceBear: Signer

  [hhFunded, Panda, IceBear] = (await ethers.getSigners())
  //MockWBNB was used for testnet testing of Alpaca Finance
  //const wbnbTokenAddr = '0xd7D069493685A581d27824Fc46EdA46B7EfC0063' //testnet

  const wbnbTokenAddr = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'
  const wbnbAsFunded = WETH__factory.connect(wbnbTokenAddr, hhFunded)
  await wbnbAsFunded.deposit({value:ethers.utils.parseEther('10000.0')}); //hhFunded(EOA) --> Contract(WBNB)

  //await wbnbAsFunded.deposit(ethers.utils.parseEther('10000.0')); //hhFunded(EOA) --> Contract(WBNB)
  console.log(await hhFunded.getAddress())
  console.log('WBNB : %f', ethers.utils.formatEther(await wbnbAsFunded.balanceOf(await hhFunded.getAddress())))
  //console.log(await wbnbToken.symbol())

  const wbnbVaultAddr = '0xd7D069493685A581d27824Fc46EdA46B7EfC0063'
  const wbnbVaultAsFunded = Vault__factory.connect(wbnbVaultAddr, hhFunded)

  //approve for transfer token to valut from wBNB contract
  const wbnbAllowance = await wbnbAsFunded.allowance(
    await hhFunded.getAddress(),
    wbnbVaultAddr,
  )
  if (wbnbAllowance.isZero()) {
    await wbnbAsFunded.approve(wbnbVaultAddr, ethers.utils.parseEther('10000'))
  }

  await wbnbVaultAsFunded.deposit(ethers.utils.parseEther('1000'))
  console.log('WBNB : %f', ethers.utils.formatEther(await wbnbAsFunded.balanceOf(await hhFunded.getAddress())))
  console.log('ibWBNB : %f', ethers.utils.formatEther(await wbnbVaultAsFunded.balanceOf(await hhFunded.getAddress())))

}//end of main

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error)
    process.exit(1)
  })
